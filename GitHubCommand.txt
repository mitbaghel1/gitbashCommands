rm -rf name.txt  -- delete file

ls 		-- Show all folder and file

cd      -- for moving in directory

git init -- for init git repo

git status -- for showing all status

git add . or       --
git add .filename  -- for add file in git stage

git commit -m "message" -- for commit

git reset copyId -- for going to back stage particular id copy

vi filename   -- for write  
On Windows GIT Bash Ctrl + X would do nothing and found out it works quite like 
vi/vim. Press i to enter inline insert mode. Type the description at the very 
top, press esc to exit insert mode, then type :x! (now the cursor is at the 
bottom) and hit enter to save and exit.

If you have opened Vim without specifying a file and you want to save that file before exiting, you will receive E32: No file name message.
You can save your file and quit using: :wq filename Enter or; :x filename Enter.

git reset -- for reset a commits

git stash
git stash pop
git stash clear 


git remote add origin your repo link

git remote -v

$ git push origin master  for push data in origin master

for make a branch

git branch branch_name

Switch beetween branches
git checkout feature
Switched to branch 'feature'

To navigate to your home directory, use "cd" or "cd ~"
To navigate up one directory level, use "cd .."
To navigate to the previous directory (or back), use "cd -"
To navigate into the root directory, use "cd /"


git clone url

git remote add upstream 

for merge a branch
 
# squesh


#for git log 
git log --decorate --oneline --graph
git reflog #for all commit and checkouts
git checkout code

git fsck
dangling blob  

